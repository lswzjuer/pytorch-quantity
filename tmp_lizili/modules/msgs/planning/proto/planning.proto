syntax = "proto2";

package roadstar.planning;

import "modules/common/proto/header.proto";

// Turn indication
enum TurnMode {
  STRAIGHT = 1;
  TURN_LEFT = 2;
  TURN_RIGHT = 3;
}

// Steer mode in decision
enum SteerMode {
  KEEP_LANE = 1;
  CHANGE_LEFT = 2;
  CHANGE_RIGHT = 3;
  LANE_APPROACH_LEFT = 4;
  LANE_APPROACH_RIGHT = 5;
}

// Drive mode in decision
enum DriveMode {
  NORMAL = 1;
  PARKING = 2;
  EMERGENCY = 3;
  IDLE = 4;
}

// One point in the trajectory
message TrajectoryPoint {
  // absolute time stamp
  optional double timestamp = 1;
  // (x,y,theta): the coordinate in UTM system
  optional double x = 2;
  optional double y = 3;
  optional double yaw = 4;
  // curvature
  optional double kappa = 5;
  // length along the path
  optional double s = 6;
  // velocity
  optional double v = 7;
  // acceleration
  optional double a = 8;
  // offset to lane center
  optional double d = 9;
  // point left limitation, should be a nonnegative value
  optional double left_d_limit = 10;
  // point right limitation, should be a nonpositive value
  optional double right_d_limit = 11;
}

// The planned trajectory
message PlanningTrajectory {
  optional roadstar.common.Header header = 1;
  // total length of the trajectory
  optional double total_length = 2;
  // total time of the trajectory
  optional double total_time = 3;
  // a series of points on the trajectory
  repeated TrajectoryPoint trajectory_point = 4;
  // a series of extended points on the trajectory
  repeated TrajectoryPoint extended_trajectory_point = 8;
  // turn indication
  optional TurnMode turn_mode = 5;
  // drive mode in decision
  optional DriveMode drive_mode = 6;
  // steer mode in decision
  optional SteerMode steer_mode = 7;
  // speed tolerance low
  optional double speed_tolerance_low = 9;
  // speed tolerance high
  optional double speed_tolerance_high = 10;
  // distance to end point
  optional double stop_dist = 11;
}
