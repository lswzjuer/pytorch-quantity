syntax = "proto2";

package roadstar.localization;

import "modules/common/proto/header.proto";
import "modules/common/proto/geometry.proto";

message Navigation_mode {
  enum Navigation_status {
    ALL_INVALID = 0;
    RAW_IMU_MEASUREMENTS = 1;
    INITIALISING = 2;
    LOCKING = 3;
    LOCKED = 4;
    RESERVED_FOR_UNLOCK = 5;
    EXPIRED_FIRMWARE = 6;
    TRIGGER_OUTPUT_WHILE_INITIALISING = 7;
    TRIGGER_OUTPUT_WHILE_LOCKING = 8;
    TRIGGER_OUTPUT_WHILE_LOCKED = 9;
    RESERVED = 10;
  }
  optional Navigation_status navigation_status = 1;
}

message Localization_mode {
  enum Localization_status {
    NONE = 0;
    SEARCH = 1;
    DOPPLER = 2;
    SPS = 3;
    DIFFERENTIAL = 4;
    RTK_FLOAT = 5;
    RTK_INTEGER = 6;
    WAAS = 7;
    OMNISTAR = 8;
    OMNISTAR_HP = 9;
    NODATA = 10;
    BLANKED = 11;
    DOPPLER_PP = 12;
    SPS_PP = 13;
    DIFFERNETIAL_PP = 14;
    RTK_FLOAT_PP = 15;
    RTK_INTEGER_PP = 16;
    OMNISTAR_XP = 17;
    CDGPS = 18;
    NOT_RECOGNISED = 19;
    UNKNOWN = 20;
    RESERVED_OR_INVALID = 21;
  }
  optional Localization_status pos_mode = 1;
  optional Localization_status vel_mode = 2;
  optional Localization_status ori_mode = 3;
}

// next id: 48
message Localization {
  enum CorrectedLevel {
    NONE = 0;
    IMU_THETA = 1;
    VLA_FILTER = 2;
  }
  optional roadstar.common.Header header = 1;  // Header.
  optional CorrectedLevel level = 40 [default = NONE];
  optional bool need_vlane = 41 [default = false];
  optional double offset_utm_x = 42 [default = 0];
  optional double offset_utm_y = 43 [default = 0];
  optional Navigation_mode navigation_mode = 4;      // 100hz
  optional Localization_mode localization_mode = 5;  // 10hz
  //  in one second we can only get accuracy only once
  //  x -> north_acc y -> east_acc z -> height_acc
  optional roadstar.common.Point3D pos_acc = 6;  // [m], 1hz

  optional double vel_x = 7;  // [m/s], 100hz, east velocity
  optional double vel_y = 8;  // [m/s], 100hz, north velocity
  optional double vel_z = 9;  // [m/s], 100hz, up velocity

  optional double acc_x = 10;  // [m/s^2], 100hz, forward
  optional double acc_y = 11;  // [m/s^2], 100hz, left
  optional double acc_z = 12;  // [m/s^2], 100hz, up

  optional double angular_vel_x = 17;  // [rad/s], 100hz, roll
  optional double angular_vel_y = 18;  // [rad/s], 100hz, pitch
  optional double angular_vel_z = 19;  // [rad/s], 100hz, yaw

  // The heading is zero when the car is facing East and positive when facing
  // North.
  optional double heading = 20;  // [rad], 100hz
  optional double heading_offset = 44 [default = 0];
  // Front of vehicle up is positive
  optional double pitch = 21;  // [rad], 100hz
  // Left side of vehicle up is positive
  optional double roll = 22;   // [rad], 100hz
  optional double utm_x = 23;  // [m], 100hz
  optional double utm_y = 24;  // [m], 100hz
  optional double utm_z = 25;  // [m], 100hz
  optional double lat = 45;    // latitude
  optional double lon = 46;    // longitude
  optional double nav_mode = 26;
  optional double pos_mode = 27;
  optional double vel_mode = 28;
  optional double att_mode = 29;
  optional float latitude_std = 30;
  optional float longitude_std = 31;
  optional float height_std = 32;
  optional float north_velocity_std = 33;
  optional float east_velocity_std = 34;
  optional float up_velocity_std = 35;
  optional float roll_std = 36;
  optional float pitch_std = 37;
  optional float azimuth_std = 38;
  optional double gps_measurement_time = 47;
}

// pos/vel/att mode
// 0 None The GPS is not able to make this measurement.
// 1 Search The GPS system is solving ambiguities and searching for a valid
// solution.
// 2 Doppler The GPS measurement is based on a Doppler Measurement.
// 3 SPS Standard Positioning Service, the GPS measurement has no additional
// external corrections.
// 4 Differential The GPS measurement used pseudo-range differential
// corrections.
// 5 RTK Float The GPS measurement used L1 Carrier-phase differential
// corrections to give a floating ambiguity solution.
// 6 RTK Integer The GPS measurement used L1/L2 Carrier-phase differential
// corrections to give an integer ambiguity solution.
// 7 WAAS The GPS measurement used SBAS corrections
// 8 OmniStar The GPS measurement used OmniStar VBS corrections
// 9 OmniStar HP The GPS measurement used OmniStar HP corrections
// 10 No Data No Data
// 11 Blanked Blanked
// 12 Doppler (PP) Doppler GPS measurement post processed
// 13 SPS (PP) SPS GPS measurement post processed
// 14 Differential (PP) Differential GPS measurement post processed
// 15 RTK Float (PP) RTK Float GPS measurement post processed
// 16 RTK Integer(PP) RTK Integer GPS measurement post processed
// 17 OmniStar XP The GPS measurement used OmniStar XP corrections
// 18 CDGPS The GPS measurement used real time Canada wide DGPS service
// 19 Not Recognised Not Recognised
// 20 Unknown Unknown
// 21 - 255 N/A Reserved or Invalid.

// nav mode
// 0 All quantities in the packet are invalid.
//
// 1 Raw IMU measurements. These are output at roughly 10Hz intervals before the
// system
// is initialised. They are useful for checking the communication link and for
// verifying
// the operation of the accelerometers and angular rate sensors in the
// laboratory. In this
// mode only the accelerations and angular rates are valid, they are not
// calibrated or to
// any specification. The information in the other fields is invalid.
//
// 2 Initialising. When GPS time becomes available the system starts the
// initialisation
// process. The strapdown navigator and Kalman filter are allocated, but do not
// yet run.
// Angular Rates and Accelerations during this time are output 1s in arrears.
// There will be
// a 1s pause at the start of initialisation where no output will be made (while
// the system
// fills the buffers). The system has to run 1s in arrears at this time in order
// to synchronise
// the GPS data with the inertial data and perform the initialisation checks.
// During the Initialising mode the Time, Acceleration and Angular Rate fields
// will be
// valid.
//
// 3 Locking. The system will move to the locking mode when the conditions for
// initialising are correct. To initialise GPS time, position and velocity must
// be available;
// roll and pitch must be estimated (assumed approximately zero with the
// “vehicle level”
// option); heading must be estimated from forward velocity, dual-antennna
// static
// initialisation or user command.
// In locking mode the system runs in arrears but catches up by 0.1s every 1s;
// locking
// mode lasts 10s. During locking mode the outputs are not real-time.
//
// 4 Locked. In Locked mode the system is outputting real-time data with the
// specified
// latency guaranteed. All fields are valid.
//
// 5 Reserved for “unlocked” navigation output. Do not use any values from this
// message.
//
// 6 Expired Firmware: this is output if the firmware is time limited and the
// expiry time has
// passed.
//
// 10 Status only: only the status part of the message should be decoded. This
// is used at the
// start of some logged NCOM files in order to save a complete set of status
// messages
// before the real data begins. RT-View relies on this so that the status fields
// are valid
// right at the start of the data.
//
// 20 Trigger output while “initialising” (Navigation Status 2). The Status
// Channel will
// always be 24 (falling trigger), 43 (rising trigger) or 65 (output trigger).
//
// 21 Trigger output while “locking” (Navigation Status 3). The Status Channel
// will always
// be 24 (falling trigger), 43 (rising trigger) or 65 (output trigger).
//
// 22 Trigger output while “locked” (Navigation Status 4). The Status Channel
// will always
// be 24 (falling trigger), 43 (rising trigger) or 65 (output trigger).
//
// Others Reserved: ignore any outputs which have reserved Navigation Status
// values.
