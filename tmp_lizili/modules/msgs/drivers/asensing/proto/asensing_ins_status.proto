/******************************************************************************
 * Copyright 2018 The Roadstar Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *****************************************************************************/

syntax = "proto2";

package roadstar.drivers.asensing;

enum SolutionType {
  ASENSING_NONE = 0;
  ASENSING_SINGLE = 16;
  ASENSING_PSRDIFF = 17;
  ASENSING_NARROW_FLOAT = 34;
  ASENSING_NARROW_INT = 50;
}

enum InsStatus {
  UNKNOWN = 0;
  POSE_INIT = 1;
  IMU_AND_GPS = 2;
  IMU_ONLY = 3;
}

enum AsensingStatus {
  POSITION = 0;
  VELOCITY = 1;
  ATTITUDE = 2;
  HEADING = 3;
}

enum AsensingSolutionType {
  NONE = 0;
  FIXEDPOS = 1;
  FIXEDHEIGHT = 2;
  FLOATCONV = 4;
  WIDELANE = 5;
  NARROWLANE = 6;
  DOPPLER_VELOCITY = 8;
  SINGLE = 16;
  PSRDIFF = 17;
  WAAS = 18;
  PROPOGATED = 19;
  OMNISTAR = 20;
  L1_FLOAT = 32;
  IONOFREE_FLOAT = 33;
  NARROW_FLOAT = 34;
  L1_INT = 48;
  WIDE_INT = 49;
  NARROW_INT = 50;
  RTK_DIRECT_INS = 51;
  INS_SBAS = 52;
  INS_PSRSP = 53;
  INS_PSRDIFF = 54;
  INS_RTKFLOAT = 55;
  INS_RTKFIXED = 56;
  INS_OMNISTAR = 57;
  INS_OMNISTAR_HP = 58;
  INS_OMNISTAR_XP = 59;
  OMNISTAR_HP = 64;
  OMNISTAR_XP = 65;
}

message AsensingInsStatus {
  optional double temperature = 1;
  optional int32 satellite_num = 2;
  optional bool has_wheel_speed = 3;
  optional AsensingStatus status = 4;
  optional AsensingSolutionType orientation_status = 5;
  optional AsensingSolutionType location_status = 6;

  // Alternate
  optional SolutionType gpsflag_pos = 11;
  optional int32 num_sats = 12;
  optional SolutionType gpsflag_heading = 13;
  optional int32 gps_age = 14;
  optional int32 car_status = 15;
  optional InsStatus ins_status = 16;
}

message AlternateAsensingInsStatus {
  optional SolutionType gpsflag_pos = 1;
  optional int32 num_sats = 2;
  optional SolutionType gpsflag_heading = 3;
  optional int32 gps_age = 4;
  optional int32 car_status = 5;
  optional InsStatus ins_status = 6;
}
