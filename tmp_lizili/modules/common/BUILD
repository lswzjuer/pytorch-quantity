load("//tools:cpplint.bzl", "cpplint")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "common",
    deps = [
        ":log",
        ":macro",
        "@ros//:ros_common",
    ],
)

cc_library(
    name = "macro",
    hdrs = [
        "macro.h",
    ],
)

cc_library(
    name = "log",
    srcs = [
        "log.cc",
    ],
    hdrs = [
        "log.h",
        ":log_define",
    ],
    deps = select(
        {
            "//tools:googlelogger": ["@glog"],
            "//tools:g3logger": ["@g3log"],
        },
        no_match_error = "unsupport logger",
    ),
)

genrule(
    name = "log_define",
    outs = [
        "log_define.h",
    ],
    cmd = select(
        {
            "//tools:googlelogger": "echo '#define USING_GLOG' > $@",
            "//tools:g3logger": "echo '#define USING_G3LOG' > $@",
        },
    ),
)

cc_library(
    name = "roadstar_app",
    srcs = [
        "roadstar_app.cc",
    ],
    hdrs = [
        "roadstar_app.h",
    ],
    deps = [
        ":log",
        "//modules/common/status",
        "//modules/common/util:string_util",
        "//modules/common/message:message_service",
        "@ros//:ros_common",
    ],
)

cc_library(
    name = "common_gflags",
    srcs = [
        "common_gflags.cc",
    ],
    hdrs = [
        "common_gflags.h",
    ],
    deps = [
        "//external:gflags",
    ],
)

cc_library(
    name = "sensor_source",
    hdrs = [
        "sensor_source.h",
    ],
    deps = [
        "//modules/common/proto:sensor_source_proto",
        "//modules/common/util:hash",
    ],
)

cc_test(
    name = "sensor_source_test",
    size = "small",
    srcs = [
        "sensor_source_test.cc",
    ],
    deps = [
        ":sensor_source",
        "@gtest",
        "@gtest//:main",
    ],
)

cpplint()
