#include "modules/common/geometry/curve.h"

#include <fstream>
#include <vector>
#include "gtest/gtest.h"

namespace roadstar {
namespace common {
namespace geometry {

TEST(CurveTest, SimpleCurveTest) {
  std::vector<double> xs = {
      77.8844, 77.8967, 77.9083, 77.9192, 77.9293, 77.9388, 77.9475, 77.9555,
      77.9629, 77.9696, 77.9758, 77.9813, 77.9863, 77.9907, 77.9947, 77.9982,
      78.0012, 78.0037, 78.0059, 78.0077, 78.0092, 78.0103, 78.0111, 78.0116,
      78.0119, 78.0119, 78.0117, 78.0113, 78.0108, 78.01,   78.0091, 78.0081,
      78.007,  78.0057, 78.0044, 78.003,  78.0015, 78,      77.9984, 77.9968,
      77.9952, 77.9936, 77.992,  77.9903, 77.9887, 77.9871, 77.9856, 77.984,
      77.9825, 77.9811, 77.9797, 77.9783, 77.977,  77.9758, 77.9746, 77.9735,
      77.9725, 77.9716, 77.9707, 77.9699, 77.9692, 77.9686, 77.968,  77.9675,
      77.9671, 77.9668, 77.9666, 77.9664, 77.9663, 77.9663, 77.9664, 77.9665,
      77.9667, 77.967,  77.9674, 77.9678, 77.9682, 77.9688, 77.9693, 77.97,
      77.9706, 77.9714, 77.9722, 77.973,  77.9739, 77.9748, 77.9757, 77.9767,
      77.9778, 77.9789, 77.98,   77.9811, 77.9823, 77.9835, 77.9847, 77.9859,
      77.9872, 77.9885, 77.9898, 77.9911, 77.9925, 77.9939, 77.9952, 77.9966,
      77.998,  77.9994, 78.0009, 78.0023, 78.0037, 78.0052, 78.0066, 78.008,
      78.0095, 78.0109, 78.0123, 78.0138, 78.0152, 78.0166, 78.018,  78.0194,
      78.0208, 78.0222, 78.0236, 78.0249, 78.0263, 78.0276, 78.0289, 78.0302,
      78.0315, 78.0328, 78.034,  78.0352, 78.0364, 78.0376, 78.0388, 78.0399,
      78.041,  78.0421, 78.0431, 78.0441, 78.0451, 78.0461, 78.0471, 78.048,
      78.0489, 78.0497, 78.0505, 78.0513, 78.0521, 78.0528, 78.0535, 78.0541,
      78.0548, 78.0554, 78.0559, 78.0564, 78.0569, 78.0574, 78.0578, 78.0582,
      78.0585, 78.0588, 78.0591, 78.0593, 78.0595, 78.0596, 78.0598, 78.0598,
      78.0599, 78.0599, 78.0599, 78.0598, 78.0597, 78.0596, 78.0594, 78.0592,
      78.0589, 78.0586, 78.0583, 78.0579, 78.0575, 78.0571, 78.0566, 78.0561,
      78.0555, 78.0549, 78.0543, 78.0536, 78.0529, 78.0522, 78.0514, 78.0506,
      78.0497, 78.0488, 78.0479, 78.047,  78.046,  78.0449, 78.0438, 78.0427,
      78.0416, 78.0404, 78.0392, 78.0379, 78.0366, 78.0352, 78.0339, 78.0325,
      78.031,  78.0295, 78.028,  78.0264, 78.0248, 78.0232, 78.0215, 78.0198,
      78.018,  78.0163, 78.0144, 78.0126, 78.0107, 78.0087, 78.0068, 78.0047,
      78.0027, 78.0006, 77.9985, 77.9963, 77.9941, 77.9919, 77.9896, 77.9873,
      77.985,  77.9826, 77.9801, 77.9777, 77.9752, 77.9726, 77.9701, 77.9675,
      77.9648, 77.9621, 77.9594, 77.9566, 77.9538, 77.951,  77.9481, 77.9452,
      77.9423, 77.9393, 77.9363};
  std::vector<double> ys = {
      0.000869919, 0.000869919, 0.000869919, 0.000869919, 0.000869919,
      0.000869918, 0.000869917, 0.000869916, 0.000869915, 0.000869914,
      0.000869913, 0.000869911, 0.00086991,  0.000869909, 0.000869908,
      0.000869907, 0.000869906, 0.000869905, 0.000869904, 0.000869903,
      0.000869902, 0.000869902, 0.000869902, 0.000869901, 0.000869901,
      0.000869901, 0.000869901, 0.000869902, 0.000869902, 0.000869902,
      0.000869903, 0.000869903, 0.000869903, 0.000869904, 0.000869904,
      0.000869905, 0.000869905, 0.000869906, 0.000869906, 0.000869907,
      0.000869908, 0.000869908, 0.000869909, 0.000869909, 0.000869909,
      0.00086991,  0.00086991,  0.000869911, 0.000869911, 0.000869912,
      0.000869912, 0.000869912, 0.000869912, 0.000869913, 0.000869913,
      0.000869913, 0.000869913, 0.000869914, 0.000869914, 0.000869914,
      0.000869914, 0.000869914, 0.000869914, 0.000869914, 0.000869914,
      0.000869915, 0.000869915, 0.000869915, 0.000869915, 0.000869915,
      0.000869915, 0.000869915, 0.000869915, 0.000869914, 0.000869914,
      0.000869914, 0.000869914, 0.000869914, 0.000869914, 0.000869914,
      0.000869914, 0.000869914, 0.000869914, 0.000869913, 0.000869913,
      0.000869913, 0.000869913, 0.000869913, 0.000869912, 0.000869912,
      0.000869912, 0.000869912, 0.000869911, 0.000869911, 0.000869911,
      0.00086991,  0.00086991,  0.00086991,  0.000869909, 0.000869909,
      0.000869908, 0.000869908, 0.000869908, 0.000869907, 0.000869907,
      0.000869906, 0.000869906, 0.000869905, 0.000869905, 0.000869904,
      0.000869904, 0.000869903, 0.000869902, 0.000869902, 0.000869901,
      0.000869901, 0.0008699,   0.000869899, 0.000869899, 0.000869898,
      0.000869897, 0.000869897, 0.000869896, 0.000869895, 0.000869895,
      0.000869894, 0.000869893, 0.000869892, 0.000869892, 0.000869891,
      0.00086989,  0.00086989,  0.000869889, 0.000869888, 0.000869888,
      0.000869887, 0.000869886, 0.000869885, 0.000869885, 0.000869884,
      0.000869883, 0.000869883, 0.000869882, 0.000869882, 0.000869881,
      0.00086988,  0.00086988,  0.000869879, 0.000869879, 0.000869878,
      0.000869878, 0.000869877, 0.000869877, 0.000869876, 0.000869876,
      0.000869875, 0.000869875, 0.000869875, 0.000869874, 0.000869874,
      0.000869874, 0.000869874, 0.000869873, 0.000869873, 0.000869873,
      0.000869873, 0.000869873, 0.000869873, 0.000869873, 0.000869873,
      0.000869873, 0.000869873, 0.000869873, 0.000869873, 0.000869873,
      0.000869873, 0.000869874, 0.000869874, 0.000869874, 0.000869874,
      0.000869875, 0.000869875, 0.000869875, 0.000869876, 0.000869876,
      0.000869877, 0.000869877, 0.000869878, 0.000869878, 0.000869879,
      0.000869879, 0.00086988,  0.00086988,  0.000869881, 0.000869882,
      0.000869882, 0.000869883, 0.000869884, 0.000869884, 0.000869885,
      0.000869886, 0.000869887, 0.000869887, 0.000869888, 0.000869889,
      0.00086989,  0.00086989,  0.000869891, 0.000869892, 0.000869893,
      0.000869894, 0.000869895, 0.000869895, 0.000869896, 0.000869897,
      0.000869898, 0.000869899, 0.000869899, 0.0008699,   0.000869901,
      0.000869902, 0.000869903, 0.000869903, 0.000869904, 0.000869905,
      0.000869906, 0.000869906, 0.000869907, 0.000869908, 0.000869909,
      0.000869909, 0.00086991,  0.000869911, 0.000869911, 0.000869912,
      0.000869912, 0.000869913, 0.000869913, 0.000869914, 0.000869914,
      0.000869915, 0.000869915, 0.000869916, 0.000869916, 0.000869916,
      0.000869917, 0.000869917, 0.000869917, 0.000869918, 0.000869918,
      0.000869918};
  Curve curve;
  std::vector<double> ss;
  curve.FitCurve(xs, ys, &ss);
  EXPECT_TRUE(true);
}

}  // namespace geometry
}  // namespace common
}  // namespace roadstar
